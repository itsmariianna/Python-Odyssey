# Փոփոխական օբյեկտը որպես լռելյայն(default) փաստարկ նշելը հետևանքներ է ունենում ֆունկցիաների վարքի վրա: Գրել ֆունկցիա, որը ցույց է տալիս այս հայեցակարգը ՝ մանրամասն բացատրելով, թե ինչու է դա տեղի ունենում և ինչպես խուսափել դրանից:

# Python-ում ֆունկցիաների լռելյայն արգումենտները ստեղծվում են մեկ անգամ, երբ ֆունկցիան սահմանվում է, և ոչ ամեն անգամ, երբ ֆունկցիան կանչվում է:
# Սա նշանակում է, որ եթե օգտագործում ենք mutable օբյեկտ որպես լռելյայն արգումենտ, այդ օբյեկտի փոփոխությունները կպահպանվեն ֆունկցիաների կանչերի ընթացքում:
# Կարող է տեղի ունենալ նման դեպք՝

def my_func(x, ls = []):
    ls.append(x)
    return ls
print(my_func(6))   # Output [6]
print(my_func(6))   # Output [6, 6]
print(my_func(6))   # Output [6, 6, 6]


# Որպեսզի խուսափենք նման բանից կարող ենք օգտագործել None-ը

def new_func(x, ls = None):
    if ls is None:
        ls = []
    ls.append(x)
    return ls
print(new_func(1))   # Output [1]
print(new_func(1))   # Output [1]
print(new_func(1))   # Output [1]